{"version":3,"sources":["App.js","index.js"],"names":["firebase","apps","length","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","analytics","SignIn","className","onClick","provider","GoogleAuthProvider","signInWithPopup","SignOut","currentUser","signOut","style","verticalAlign","ChatPage","trial","useRef","messagesRef","collection","query","orderBy","limit","useCollectionData","idField","messages","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","uid","photoURL","add","text","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","map","msg","ChatMessage","message","id","ref","onSubmit","value","onChange","target","placeholder","type","disabled","size","props","messageClass","src","App","useAuthState","user","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oUAcKA,IAASC,KAAKC,OAWjBF,IAASG,MAVXH,IAASI,cAAc,CACrBC,OAAQ,0CACRC,WAAY,sCACZC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAOjB,IAAMC,EAAOZ,IAASY,OAChBC,EAAYb,IAASa,YACTb,IAASc,YAsB3B,SAASC,IAOP,OACE,gCACA,mEAA0C,uBAC1C,0FAAiE,uBACjE,wDAA+B,uBAC9B,cAAC,IAAD,CAAcC,UAAU,UAAUC,QAVZ,WACvB,IAAMC,EAAW,IAAIlB,IAASY,KAAKO,mBACnCP,EAAKQ,gBAAgBF,MAQ2C,uBAC/D,yDAML,SAASG,IACP,OAAOT,EAAKU,aACV,wBAAQN,UAAU,WAAWC,QAAS,kBAAML,EAAKW,WAAjD,SAA4D,cAAC,IAAD,CAAcC,MAAO,CAACC,cAAe,cAKrG,SAASC,IACP,IAAMC,EAAQC,mBACRC,EAAchB,EAAUiB,WAAW,YACnCC,EAAQF,EAAYG,QAAQ,aAAaC,MAAM,IAErD,EAAmBC,YAAkBH,EAAO,CAAEI,QAAS,OAAhDC,EAAP,oBAEA,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAGMC,EAAW,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DAClBD,EAAEE,iBADgB,EAGQ/B,EAAKU,YAAvBsB,EAHU,EAGVA,IAAKC,EAHK,EAGLA,SAHK,SAKZhB,EAAYiB,IAAI,CACpBC,KAAMT,EACNU,UAAWhD,IAASa,UAAUoC,WAAWC,kBACzCN,MACAC,aATgB,OAYlBN,EAAa,IACbZ,EAAMwB,QAAQC,eAAe,CAAEC,SAAU,WAbvB,2CAAH,sDAgBjB,OAAQ,gCACN,iCAEGjB,GAAYA,EAASkB,KAAI,SAAAC,GAAG,OAAI,cAACC,EAAD,CAA0BC,QAASF,GAAjBA,EAAIG,OAEvD,sBAAMC,IAAKhC,OAIb,uBAAMiC,SAAUpB,EAAhB,UAEE,uBAAOqB,MAAOvB,EAAWwB,SAAU,SAACrB,GAAD,OAAOF,EAAaE,EAAEsB,OAAOF,QAAQG,YAAY,wBAEpF,wBAAQC,KAAK,SAASC,UAAW5B,EAAjC,SAA4C,cAAC,IAAD,CAAUd,MAAO,CAACC,cAAe,UAAW0C,KAAK,iBAOnG,SAASX,EAAYY,GACnB,MAAgCA,EAAMX,QAA9BV,EAAR,EAAQA,KAAMH,EAAd,EAAcA,IAAKC,EAAnB,EAAmBA,SAEbwB,EAAezB,IAAQhC,EAAKU,YAAYsB,IAAM,OAAS,WAE7D,OAAQ,8BACN,sBAAK5B,UAAS,kBAAaqD,GAA3B,UACE,qBAAKC,IAAKzB,IACV,4BAAIE,SAMKwB,MAzGf,WAEE,MAAeC,YAAa5D,GAArB6D,EAAP,oBAEA,OACE,sBAAKzD,UAAU,MAAf,UACE,mCACE,+BAAI,cAAC,IAAD,IAAJ,mBACA,cAACK,EAAD,OAGF,kCACGoD,EAAO,cAAC/C,EAAD,IAAe,cAACX,EAAD,UCxC/B2D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a5cc24c6.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\nimport './App.css';\nimport GoogleButton from 'react-google-button';\nimport {FaSignOutAlt,FaRocketchat } from 'react-icons/fa';\nimport { IoMdSend} from \"react-icons/io\";\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/analytics';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nif (!firebase.apps.length) {\nfirebase.initializeApp({\n  apiKey: \"AIzaSyANPPivxeXYiNdHoxVRn_KWCDv10ns6EC0\",\n  authDomain: \"realtime-globalchat.firebaseapp.com\",\n  projectId: \"realtime-globalchat\",\n  storageBucket: \"realtime-globalchat.appspot.com\",\n  messagingSenderId: \"575741010308\",\n  appId: \"1:575741010308:web:a255487eb6bdace2937dd1\",\n  measurementId: \"G-4Q8MZ1XK5J\"\n}); \n} else {\n  firebase.app(); // if already initialized\n}\n\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\nconst analytics = firebase.analytics();\n\n\nfunction App() {\n\n  const [user] = useAuthState(auth);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1><FaRocketchat  /> RealTimeChat</h1>\n        <SignOut />\n      </header>\n\n      <section>\n        {user ? <ChatPage /> : <SignIn />}\n      </section>\n\n    </div>\n  );\n}\n\nfunction SignIn() {\n\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n\n  return (\n    <div>\n    <h4>Chat app for Real-time engagement</h4><br></br>\n    <h4>Find new people, chat with them, and share your interest</h4><br></br>\n    <h4>To get Started Sign In</h4><br></br>\n     <GoogleButton className=\"sign-in\" onClick={signInWithGoogle} /><br></br>\n     <h4>Made by Akshat Jalan</h4>\n    </div>\n  )\n\n}\n\nfunction SignOut() {\n  return auth.currentUser && (\n    <button className=\"sign-out\" onClick={() => auth.signOut()}><FaSignOutAlt style={{verticalAlign: 'middle'}}  /></button>\n  )\n}\n\n\nfunction ChatPage() {\n  const trial = useRef();\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(25);\n\n  const [messages] = useCollectionData(query, { idField: 'id' });\n\n  const [formValue, setFormValue] = useState('');\n\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n\n    const { uid, photoURL } = auth.currentUser;\n\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL\n    })\n\n    setFormValue('');\n    trial.current.scrollIntoView({ behavior: 'smooth' });\n  }\n\n  return (<div>\n    <main>\n\n      {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n\n      <span ref={trial}></span>\n\n    </main>\n\n    <form onSubmit={sendMessage}>\n\n      <input value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"Type your text here\" />\n\n      <button type=\"submit\" disabled={!formValue}><IoMdSend style={{verticalAlign: 'middle'}} size=\"35px\" /></button>\n\n    </form>\n  </div>)\n}\n\n\nfunction ChatMessage(props) {\n  const { text, uid, photoURL } = props.message;\n\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n\n  return (<div>\n    <div className={`message ${messageClass}`}>\n      <img src={photoURL} />\n      <p>{text}</p>\n    </div>\n  </div>)\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}